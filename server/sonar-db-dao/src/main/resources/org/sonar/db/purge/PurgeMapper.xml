<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<mapper namespace="org.sonar.db.purge.PurgeMapper">

  <select id="selectAnalysisUuids" parameterType="map" resultType="String">
    select
      s.uuid as uuid
    from
      snapshots s
    where
      s.component_uuid=#{componentUuid,jdbcType=VARCHAR}
      <if test="islast != null">
        and s.islast=#{islast}
      </if>
      <if test="notPurged != null and notPurged">
        and (s.purge_status is null or s.purge_status=0)
      </if>
      <if test="status != null">
        and s.status in
        <foreach item="s" index="index" collection="status" open="(" separator="," close=")">#{s}</foreach>
      </if>
  </select>

  <select id="selectPurgeableAnalyses" parameterType="String" resultType="PurgeableAnalysis">
    select
      s.uuid as "analysisUuid",
      s.created_at as "date",
      case when ve.analysis_uuid is not null then ${_true} else ${_false} end as "hasEvents",
      islast as "isLast",
      case when ve.category='Version' then ve.name else null end as "version"
    from snapshots s
      left outer join events ve on ve.analysis_uuid=s.uuid
    where
      s.component_uuid=#{componentUuid,jdbcType=VARCHAR}
      and s.status='P'
  </select>

  <select id="selectSpecificAnalysisNewCodePeriod" parameterType="String" resultType="String">
    select
      value
    from
      new_code_periods ncp
    where
      ncp.type='SPECIFIC_ANALYSIS'
      AND ncp.branch_uuid=#{projectUuid,jdbcType=VARCHAR}
  </select>

  <select id="selectStaleBranchesAndPullRequests" parameterType="map" resultType="String">
    select
      pb.uuid
    from
      project_branches pb
    left join snapshots s
    on
        s.component_uuid = pb.uuid
        and s.islast=${_true}
    where
        pb.project_uuid=#{projectUuid,jdbcType=VARCHAR}
        and (pb.branch_type = 'PULL_REQUEST' or pb.exclude_from_purge = ${_false})
        and (s.created_at is null or s.created_at &lt; #{toDate})

  </select>

  <select id="selectRootAndModulesOrSubviewsByProjectUuid" resultType="String" parameterType="String">
    select
       p.uuid
    from
      components p
    where
      (
        p.project_uuid=#{rootUuid,jdbcType=VARCHAR}
        and p.scope = 'PRJ' and p.qualifier in ('SVW','BRC')
      )
      or (
        uuid=#{rootUuid,jdbcType=VARCHAR}
        and p.scope = 'PRJ' and p.qualifier in ('APP', 'VW','TRK')
      )
  </select>

  <select id="selectDisabledComponentsWithFileSource" parameterType="map" resultType="String">
    select
      file_uuid
    from file_sources fs
    inner join components p on
      p.uuid = fs.file_uuid
      and p.enabled = ${_false}
      and p.project_uuid=#{projectUuid,jdbcType=VARCHAR}
  </select>

  <select id="selectDisabledComponentsWithUnresolvedIssues" parameterType="map" resultType="String">
    select
      i.component_uuid
    from issues i
    inner join components p on
      p.uuid = i.component_uuid
      and p.enabled = ${_false}
      and p.project_uuid=#{projectUuid,jdbcType=VARCHAR}
    where
      resolution is null
  </select>

  <select id="selectDisabledComponentsWithLiveMeasures" parameterType="map" resultType="String">
    select
      lm.component_uuid
    from live_measures lm
    inner join components p on
      p.uuid = lm.component_uuid
      and p.enabled = ${_false}
      and p.project_uuid=#{projectUuid,jdbcType=VARCHAR}
  </select>

  <delete id="deleteAnalysisMeasures" parameterType="map">
    delete from project_measures
    where
      analysis_uuid in
      <foreach collection="analysisUuids" open="(" close=")" item="analysisUuid" separator=",">
        #{analysisUuid,jdbcType=VARCHAR}
      </foreach>
  </delete>

  <delete id="fullDeleteComponentMeasures" parameterType="map">
    delete from project_measures
    where
      component_uuid in
      <foreach collection="componentUuids" open="(" close=")" item="componentUuid" separator=",">
        #{componentUuid,jdbcType=VARCHAR}
      </foreach>
  </delete>

  <delete id="deleteAnalysisDuplications" parameterType="map">
    delete from duplications_index
    where
      analysis_uuid in
      <foreach collection="analysisUuids" open="(" close=")" item="analysisUuid" separator=",">
        #{analysisUuid,jdbcType=VARCHAR}
      </foreach>
  </delete>

  <delete id="deleteAnalysisEvents" parameterType="map">
    delete from events
    where
      analysis_uuid in
      <foreach collection="analysisUuids" open="(" close=")" item="analysisUuid" separator=",">
        #{analysisUuid,jdbcType=VARCHAR}
      </foreach>
  </delete>

  <delete id="deleteAnalysisEventComponentChanges" parameterType="map">
    delete from event_component_changes
    where
      event_analysis_uuid in
      <foreach collection="analysisUuids" open="(" close=")" item="analysisUuid" separator=",">
        #{analysisUuid,jdbcType=VARCHAR}
      </foreach>
  </delete>

  <delete id="deleteAnalyses" parameterType="map">
    delete from snapshots
    where
      uuid in
      <foreach collection="analysisUuids" open="(" close=")" item="analysisUuid" separator=",">
        #{analysisUuid,jdbcType=VARCHAR}
      </foreach>
  </delete>

  <delete id="deleteAnalysisProperties" parameterType="map">
    DELETE FROM analysis_properties
    WHERE
      analysis_uuid IN
      <foreach collection="analysisUuids" open="(" close=")" item="analysisUuid" separator=",">
        #{analysisUuid,jdbcType=VARCHAR}
      </foreach>
  </delete>

  <update id="updatePurgeStatusToOne" parameterType="map">
    update
      snapshots
    set
      purge_status = 1
    where
      uuid in
      <foreach collection="analysisUuids" open="(" close=")" item="analysisUuid" separator=",">
        #{analysisUuid,jdbcType=VARCHAR}
      </foreach>
  </update>

  <update id="resolveComponentIssuesNotAlreadyResolved" parameterType="map">
    update
      issues
    set
      status='CLOSED',
      resolution='REMOVED',
      updated_at=#{dateAsLong},
      issue_close_date=#{dateAsLong},
      issue_update_date=#{dateAsLong}
    where
      component_uuid in
      <foreach collection="componentUuids" open="(" close=")" item="componentUuid" separator=",">
        #{componentUuid,jdbcType=VARCHAR}
      </foreach>
      and resolution is null
  </update>

  <delete id="deleteProjectLinksByProjectUuid" parameterType="map">
    delete from project_links
    where
      project_uuid = #{rootUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deletePropertiesByComponentUuids" parameterType="map">
    delete from properties
    where
      component_uuid in
      <foreach collection="componentUuids" open="(" close=")" item="componentUuid" separator=",">
        #{componentUuid}
      </foreach>
  </delete>

  <delete id="deleteComponentsByProjectUuid" parameterType="map">
    delete from components
    where
      project_uuid = #{rootUuid,jdbcType=VARCHAR}
  </delete>

    <delete id="deleteComponentsByMainBranchProjectUuid" parameterType="map">
    delete from components
    where
      main_branch_project_uuid = #{uuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteProjectsByProjectUuid" parameterType="map">
    delete from projects
    where
      uuid = #{projectUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteComponentsByUuids" parameterType="map">
    delete from components
    where
      uuid in
        <foreach collection="componentUuids" open="(" close=")" item="componentUuid" separator=",">
          #{componentUuid,jdbcType=VARCHAR}
        </foreach>
  </delete>

  <delete id="deleteGroupRolesByComponentUuid" parameterType="map">
    delete from group_roles
    where
      component_uuid = #{rootUuid,jdbcType=INTEGER}
  </delete>

  <delete id="deleteUserRolesByComponentUuid" parameterType="map">
    delete from user_roles
    where
      component_uuid = #{rootUuid,jdbcType=INTEGER}
  </delete>

  <delete id="deleteManualMeasuresByComponentUuids" parameterType="map">
    delete from manual_measures where component_uuid in
    <foreach collection="componentUuids" open="(" close=")" item="componentUuid" separator=",">
      #{componentUuid,jdbcType=VARCHAR}
    </foreach>
  </delete>

  <delete id="deleteEventsByComponentUuid" parameterType="map">
    delete from events
    where
      component_uuid = #{componentUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteEventComponentChangesByComponentUuid" parameterType="map">
    delete from event_component_changes
    where
      event_component_uuid = #{componentUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteIssueChangesByProjectUuid" parameterType="map">
    delete from issue_changes where project_uuid = #{projectUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteIssuesByProjectUuid" parameterType="map">
    delete from issues
    where project_uuid = #{projectUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteFileSourcesByProjectUuid">
    delete from file_sources where project_uuid=#{rootProjectUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteFileSourcesByFileUuid">
    delete from file_sources
    where
      file_uuid in
      <foreach collection="fileUuids" open="(" close=")" item="fileUuid" separator=",">
        #{fileUuid,jdbcType=VARCHAR}
      </foreach>
  </delete>

  <select id="selectOldClosedIssueKeys" parameterType="map" resultType="String">
    SELECT kee FROM issues
    WHERE project_uuid=#{projectUuid,jdbcType=VARCHAR}
    <choose>
      <when test="toDate == null">
        AND issue_close_date IS NOT NULL
      </when>
      <otherwise>
        AND issue_close_date &lt; #{toDate}
      </otherwise>
    </choose>
  </select>

  <select id="selectDisabledComponentsWithoutIssues" resultType="String" parameterType="String">
    SELECT
      p.uuid
    FROM
      components p
    WHERE
      p.enabled = ${_false}
      AND p.project_uuid=#{projectUuid,jdbcType=VARCHAR}
      AND NOT EXISTS (SELECT 1 FROM issues i WHERE i.component_uuid = p.uuid)
  </select>

  <delete id="deleteIssuesFromKeys" parameterType="map">
    DELETE FROM issues
    WHERE kee IN
    <foreach collection="keys" open="(" close=")" item="key" separator=",">
      #{key,jdbcType=VARCHAR}
    </foreach>
  </delete>

  <delete id="deleteApplicationProjectsByApplicationUuid" parameterType="map">
    DELETE
    FROM app_projects
    where
      application_uuid=#{applicationUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteApplicationBranchProjectBranchesByApplicationUuid" parameterType="map">
    DELETE
    FROM app_branch_project_branch
    where
      application_uuid=#{applicationUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteApplicationBranchProjects" parameterType="String">
    DELETE
    FROM app_branch_project_branch
    where
      application_branch_uuid=#{branchUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteApplicationBranchProjectBranchesByProjectBranchUuid" parameterType="String">
    DELETE
    FROM app_branch_project_branch
    where project_branch_uuid=#{projectBranchUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteIssueChangesFromIssueKeys" parameterType="map">
    DELETE FROM issue_changes
    WHERE issue_key IN
    <foreach collection="issueKeys" open="(" close=")" item="issueKey" separator=",">
      #{issueKey,jdbcType=VARCHAR}
    </foreach>
  </delete>

  <delete id="deleteCeScannerContextOfCeActivityByRootUuidOrBefore">
    delete from ce_scanner_context
    where
    task_uuid in (
      select
        uuid
      from ce_activity
      <include refid="whereClauseCeActivityByRootUuidOrBefore" />
    )
  </delete>

  <delete id="deleteCeTaskCharacteristicsOfCeActivityByRootUuidOrBefore">
    delete from ce_task_characteristics
    where
    task_uuid in (
      select
        uuid
      from ce_activity
      <include refid="whereClauseCeActivityByRootUuidOrBefore" />
    )
  </delete>

  <delete id="deleteCeTaskInputOfCeActivityByRootUuidOrBefore">
    delete from ce_task_input
    where
    task_uuid in (
      select
        uuid
      from ce_activity
      <include refid="whereClauseCeActivityByRootUuidOrBefore" />
    )
  </delete>

  <delete id="deleteCeTaskMessageOfCeActivityByRootUuidOrBefore">
    delete from ce_task_message
    where
    task_uuid in (
      select
        uuid
      from ce_activity
      <include refid="whereClauseCeActivityByRootUuidOrBefore" />
    )
  </delete>

  <delete id="deleteCeActivityByRootUuidOrBefore">
    delete from ce_activity
      <include refid="whereClauseCeActivityByRootUuidOrBefore" />
  </delete>

  <sql id="whereClauseCeActivityByRootUuidOrBefore">
    where
    <choose>
      <when test="rootUuid != null and createdAtBefore != null">
        created_at &lt; #{createdAtBefore,jdbcType=BIGINT}
        and (
          component_uuid=#{rootUuid,jdbcType=VARCHAR}
          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}
        )
      </when>
      <when test="createdAtBefore != null">
        created_at &lt; #{createdAtBefore,jdbcType=BIGINT}
      </when>
      <when test="rootUuid != null">
        component_uuid=#{rootUuid,jdbcType=VARCHAR}
        or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}
      </when>
      <!-- safety net when both variables are null to never generate a
           delete statement deleting the whole table -->
      <otherwise>
        1 = 2
      </otherwise>
    </choose>
  </sql>

  <delete id="deleteCeScannerContextOfCeQueueByRootUuid">
    delete from ce_scanner_context
    where
      task_uuid in (
        select
          uuid
        from ce_queue
        where
          component_uuid=#{rootUuid,jdbcType=VARCHAR}
          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}
      )
  </delete>

  <delete id="deleteCeTaskCharacteristicsOfCeQueueByRootUuid">
    delete from ce_task_characteristics
    where
      task_uuid in (
        select
          uuid
        from ce_queue
        where
          component_uuid=#{rootUuid,jdbcType=VARCHAR}
          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}
      )
  </delete>

  <delete id="deleteCeTaskInputOfCeQueueByRootUuid">
    delete from ce_task_input
    where
      task_uuid in (
        select
          uuid
        from ce_queue
        where
          component_uuid=#{rootUuid,jdbcType=VARCHAR}
          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}
      )
  </delete>

  <delete id="deleteCeTaskMessageOfCeQueueByRootUuid">
    delete from ce_task_message
    where
      task_uuid in (
        select
          uuid
        from ce_queue
        where
          component_uuid=#{rootUuid,jdbcType=VARCHAR}
          or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}
      )
  </delete>

  <delete id="deleteCeQueueByRootUuid">
    delete from ce_queue
    where
      component_uuid=#{rootUuid,jdbcType=VARCHAR}
      or main_component_uuid=#{rootUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteNewCodePeriodsByRootUuid">
    DELETE FROM new_code_periods
    WHERE
      branch_uuid=#{rootUuid,jdbcType=VARCHAR}
      OR project_uuid=#{rootUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteWebhooksByProjectUuid">
    delete from webhooks where project_uuid=#{projectUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteWebhookDeliveriesByProjectUuid">
    delete from webhook_deliveries where component_uuid=#{projectUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteProjectMappingsByProjectUuid">
    delete from project_mappings where project_uuid=#{projectUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteProjectAlmSettingsByProjectUuid">
    delete from project_alm_settings where project_uuid=#{projectUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteBranchByUuid">
    delete from project_branches where uuid=#{uuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteLiveMeasuresByProjectUuid">
    delete from live_measures where project_uuid = #{projectUuid,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteLiveMeasuresByComponentUuids">
    delete from live_measures where component_uuid in <foreach item="componentUuid" index="index" collection="componentUuids" open="(" separator="," close=")">#{componentUuid, jdbcType=VARCHAR}</foreach>
  </delete>

  <delete id="deleteUserDismissedMessagesByProjectUuid">
    delete from user_dismissed_messages where project_uuid = #{projectUuid,jdbcType=VARCHAR}
  </delete>
</mapper>

