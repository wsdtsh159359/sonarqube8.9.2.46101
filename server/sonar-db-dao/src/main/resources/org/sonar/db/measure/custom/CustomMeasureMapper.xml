<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<mapper namespace="org.sonar.db.measure.custom.CustomMeasureMapper">
  <sql id="selectColumns">
    m.uuid,
    m.metric_uuid as metricUuid,
    m.component_uuid as componentUuid,
    m.value,
    m.text_value as textValue,
    m.user_uuid as userUuid,
    m.description,
    m.created_at as createdAt,
    m.updated_at as updatedAt
  </sql>

  <select id="selectByUuid" resultType="CustomMeasure">
    select
    <include refid="selectColumns"/>
    from manual_measures m
    where m.uuid=#{uuid}
  </select>

  <select id="selectByMetricUuid" resultType="CustomMeasure">
    select
    <include refid="selectColumns"/>
    from manual_measures m
    where m.metric_uuid=#{metricUuid}
  </select>

  <select id="selectByComponentUuid" resultType="CustomMeasure">
    select
    <include refid="selectColumns"/>
    from manual_measures m
    where m.component_uuid=#{componentUuid}
  </select>

  <select id="selectByMetricKeyAndTextValue" resultType="CustomMeasure">
    SELECT
    <include refid="selectColumns"/>
    FROM manual_measures m
    INNER JOIN metrics metric ON metric.uuid=m.metric_uuid AND metric.name=#{metricKey}
    <where>
      m.text_value=#{textValue}
    </where>
  </select>

  <insert id="insert" parameterType="CustomMeasure" useGeneratedKeys="false">
    INSERT INTO manual_measures (
    uuid, metric_uuid, component_uuid, value, text_value, user_uuid, description, created_at, updated_at
    )
    VALUES (
    #{uuid, jdbcType=VARCHAR},
    #{metricUuid, jdbcType=VARCHAR},
    #{componentUuid, jdbcType=VARCHAR},
    #{value, jdbcType=DOUBLE},
    #{textValue, jdbcType=VARCHAR},
    #{userUuid, jdbcType=VARCHAR},
    #{description, jdbcType=VARCHAR},
    #{createdAt, jdbcType=BIGINT},
    #{updatedAt, jdbcType=BIGINT}
    )
  </insert>

  <update id="update" parameterType="CustomMeasure">
    update manual_measures
    set value = #{value, jdbcType=DOUBLE},
    text_value = #{textValue, jdbcType=VARCHAR},
    description = #{description, jdbcType=VARCHAR},
    user_uuid = #{userUuid, jdbcType=VARCHAR},
    updated_at = #{updatedAt, jdbcType=BIGINT}
    where uuid = #{uuid}
  </update>

  <delete id="deleteByMetricUuids">
    delete from manual_measures
    where metric_uuid in
    <foreach collection="metricUuids" item="metricUuid" open="(" close=")" separator=",">
      #{metricUuid}
    </foreach>
  </delete>

  <delete id="delete">
    delete from manual_measures
    where uuid=#{uuid}
  </delete>

  <select id="countByComponentUuid" resultType="Integer">
    select count(1)
    from manual_measures m
    where m.component_uuid=#{componentUuid}
  </select>

  <select id="countByComponentIdAndMetricUuid" resultType="Integer">
    select count(1)
    from manual_measures m
    where m.metric_uuid=#{metricUuid} and m.component_uuid=#{componentUuid}
  </select>
</mapper>
