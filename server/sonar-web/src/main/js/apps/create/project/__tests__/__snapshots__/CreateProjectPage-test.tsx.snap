// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<Fragment>
  <Helmet
    defer={true}
    encodeSpecialCharacters={true}
    title="my_account.create_new.TRK"
    titleTemplate="%s"
  />
  <A11ySkipTarget
    anchor="create_project_main"
  />
  <div
    className="page page-limited huge-spacer-bottom position-relative"
    id="create-project"
  >
    <Connect(withAppState(CreateProjectModeSelection))
      almCounts={
        Object {
          "azure": 0,
          "bitbucket": 0,
          "github": 0,
          "gitlab": 0,
        }
      }
      loadingBindings={true}
      onSelectMode={[Function]}
    />
  </div>
</Fragment>
`;

exports[`should render correctly if the Azure method is selected 1`] = `
<Fragment>
  <Helmet
    defer={true}
    encodeSpecialCharacters={true}
    title="my_account.create_new.TRK"
    titleTemplate="%s"
  />
  <A11ySkipTarget
    anchor="create_project_main"
  />
  <div
    className="page page-limited huge-spacer-bottom position-relative"
    id="create-project"
  >
    <AzureProjectCreate
      canAdmin={false}
      loadingBindings={true}
      location={
        Object {
          "action": "PUSH",
          "hash": "",
          "key": "key",
          "pathname": "/path",
          "query": Object {
            "mode": "azure",
          },
          "search": "",
          "state": Object {},
        }
      }
      onProjectCreate={[Function]}
      router={
        Object {
          "createHref": [MockFunction],
          "createPath": [MockFunction],
          "go": [MockFunction],
          "goBack": [MockFunction],
          "goForward": [MockFunction],
          "isActive": [MockFunction],
          "push": [MockFunction],
          "replace": [MockFunction],
          "setRouteLeaveHook": [MockFunction],
        }
      }
      settings={Array []}
    />
  </div>
</Fragment>
`;

exports[`should render correctly if the BBS method is selected 1`] = `
<Fragment>
  <Helmet
    defer={true}
    encodeSpecialCharacters={true}
    title="my_account.create_new.TRK"
    titleTemplate="%s"
  />
  <A11ySkipTarget
    anchor="create_project_main"
  />
  <div
    className="page page-limited huge-spacer-bottom position-relative"
    id="create-project"
  >
    <BitbucketProjectCreate
      bitbucketSettings={Array []}
      canAdmin={false}
      loadingBindings={true}
      location={
        Object {
          "action": "PUSH",
          "hash": "",
          "key": "key",
          "pathname": "/path",
          "query": Object {
            "mode": "bitbucket",
          },
          "search": "",
          "state": Object {},
        }
      }
      onProjectCreate={[Function]}
    />
  </div>
</Fragment>
`;

exports[`should render correctly if the GitHub method is selected 1`] = `
<Fragment>
  <Helmet
    defer={true}
    encodeSpecialCharacters={true}
    title="my_account.create_new.TRK"
    titleTemplate="%s"
  />
  <A11ySkipTarget
    anchor="create_project_main"
  />
  <div
    className="page page-limited huge-spacer-bottom position-relative"
    id="create-project"
  >
    <GitHubProjectCreate
      canAdmin={false}
      loadingBindings={true}
      location={
        Object {
          "action": "PUSH",
          "hash": "",
          "key": "key",
          "pathname": "/path",
          "query": Object {
            "mode": "github",
          },
          "search": "",
          "state": Object {},
        }
      }
      onProjectCreate={[Function]}
      router={
        Object {
          "createHref": [MockFunction],
          "createPath": [MockFunction],
          "go": [MockFunction],
          "goBack": [MockFunction],
          "goForward": [MockFunction],
          "isActive": [MockFunction],
          "push": [MockFunction],
          "replace": [MockFunction],
          "setRouteLeaveHook": [MockFunction],
        }
      }
      settings={Array []}
    />
  </div>
</Fragment>
`;

exports[`should render correctly if the GitLab method is selected 1`] = `
<Fragment>
  <Helmet
    defer={true}
    encodeSpecialCharacters={true}
    title="my_account.create_new.TRK"
    titleTemplate="%s"
  />
  <A11ySkipTarget
    anchor="create_project_main"
  />
  <div
    className="page page-limited huge-spacer-bottom position-relative"
    id="create-project"
  >
    <GitlabProjectCreate
      canAdmin={false}
      loadingBindings={true}
      location={
        Object {
          "action": "PUSH",
          "hash": "",
          "key": "key",
          "pathname": "/path",
          "query": Object {
            "mode": "gitlab",
          },
          "search": "",
          "state": Object {},
        }
      }
      onProjectCreate={[Function]}
      router={
        Object {
          "createHref": [MockFunction],
          "createPath": [MockFunction],
          "go": [MockFunction],
          "goBack": [MockFunction],
          "goForward": [MockFunction],
          "isActive": [MockFunction],
          "push": [MockFunction],
          "replace": [MockFunction],
          "setRouteLeaveHook": [MockFunction],
        }
      }
      settings={Array []}
    />
  </div>
</Fragment>
`;

exports[`should render correctly if the manual method is selected 1`] = `
<Fragment>
  <Helmet
    defer={true}
    encodeSpecialCharacters={true}
    title="my_account.create_new.TRK"
    titleTemplate="%s"
  />
  <A11ySkipTarget
    anchor="create_project_main"
  />
  <div
    className="page page-limited huge-spacer-bottom position-relative"
    id="create-project"
  >
    <ManualProjectCreate
      onProjectCreate={[Function]}
    />
  </div>
</Fragment>
`;
