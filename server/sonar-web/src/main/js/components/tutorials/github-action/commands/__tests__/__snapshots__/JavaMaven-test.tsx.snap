// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<Fragment>
  <li
    className="abs-width-600"
  >
    <FormattedMessage
      defaultMessage="onboarding.tutorial.with.github_action.yaml.maven.pom"
      id="onboarding.tutorial.with.github_action.yaml.maven.pom"
      values={
        Object {
          "pom": <React.Fragment>
            <code
              className="rule"
            >
              pom.xml
            </code>
            <ClipboardIconButton
              copyValue="pom.xml"
            />
          </React.Fragment>,
        }
      }
    />
    <CodeSnippet
      snippet="<properties>
  <sonar.projectKey>my-project</sonar.projectKey>
</properties>"
    />
  </li>
  <CreateYmlFile
    yamlTemplate="name: Build
on:
  push:
    branches:
      - master # or the name of your main branch
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: \${{ runner.os }}-sonar
          restore-keys: \${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: \${{ runner.os }}-m2-\${{ hashFiles('**/pom.xml') }}
          restore-keys: \${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: \${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: \${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar"
  />
</Fragment>
`;

exports[`should render correctly: without branch enabled 1`] = `
<Fragment>
  <li
    className="abs-width-600"
  >
    <FormattedMessage
      defaultMessage="onboarding.tutorial.with.github_action.yaml.maven.pom"
      id="onboarding.tutorial.with.github_action.yaml.maven.pom"
      values={
        Object {
          "pom": <React.Fragment>
            <code
              className="rule"
            >
              pom.xml
            </code>
            <ClipboardIconButton
              copyValue="pom.xml"
            />
          </React.Fragment>,
        }
      }
    />
    <CodeSnippet
      snippet="<properties>
  <sonar.projectKey>my-project</sonar.projectKey>
</properties>"
    />
  </li>
  <CreateYmlFile
    yamlTemplate="name: Build
on:
  push:
    branches:
      - master # or the name of your main branch

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: \${{ runner.os }}-sonar
          restore-keys: \${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: \${{ runner.os }}-m2-\${{ hashFiles('**/pom.xml') }}
          restore-keys: \${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: \${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: \${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar"
  />
</Fragment>
`;
