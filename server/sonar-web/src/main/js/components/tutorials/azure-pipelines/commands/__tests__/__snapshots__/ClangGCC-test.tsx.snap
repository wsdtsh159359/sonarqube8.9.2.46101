// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly for "linux" 1`] = `
<Fragment>
  <span
    className="big-spacer-top display-block"
  >
    onboarding.tutorial.with.azure_pipelines.os
  </span>
  <RenderOptions
    checked="linux"
    name="os"
    onCheck={[Function]}
    optionLabelKey="onboarding.build.other.os"
    options={
      Array [
        "linux",
        "win",
        "mac",
      ]
    }
  />
  <AlertClassicEditor />
  <ol
    className="list-styled big-spacer-top"
  >
    <li>
      <SentenceWithHighlights
        highlightKeys={
          Array [
            "pipeline",
          ]
        }
        highlightPrefixKeys="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare"
        translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp"
      />
    </li>
    <ul
      className="list-styled"
    >
      <li>
        <SentenceWithHighlights
          highlightKeys={
            Array [
              "task",
              "inline",
            ]
          }
          highlightPrefixKeys="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.nix"
          translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.script"
        />
        <CodeSnippet
          snippet="curl 'http://localhost/static/cpp/build-wrapper-linux-x86.zip' --output build-wrapper.zip
unzip build-wrapper.zip"
        />
      </li>
    </ul>
    <li>
      <SentenceWithHighlights
        highlightKeys={
          Array [
            "task",
            "before",
          ]
        }
        highlightPrefixKeys="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare"
        translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.ccpp"
      />
    </li>
    <PrepareAnalysisCommand
      buildTool="cfamily"
      kind={1}
      projectKey="projectKey"
    />
    <li>
      <SentenceWithHighlights
        highlightKeys={
          Array [
            "task",
          ]
        }
        translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build.ccpp"
      />
    </li>
    <ul
      className="list-styled"
    >
      <li>
        <SentenceWithHighlights
          highlightKeys={
            Array [
              "build_wrapper",
            ]
          }
          translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_script.ccpp"
        />
        <CodeSnippet
          snippet="./build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output make clean all"
        />
      </li>
    </ul>
    <li>
      <SentenceWithHighlights
        highlightKeys={
          Array [
            "task",
            "after",
          ]
        }
        highlightPrefixKeys="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run"
        translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run.ccpp"
      />
    </li>
    <Connect(withAppState(PublishSteps)) />
  </ol>
</Fragment>
`;

exports[`should render correctly for "mac" 1`] = `
<Fragment>
  <span
    className="big-spacer-top display-block"
  >
    onboarding.tutorial.with.azure_pipelines.os
  </span>
  <RenderOptions
    checked="mac"
    name="os"
    onCheck={[Function]}
    optionLabelKey="onboarding.build.other.os"
    options={
      Array [
        "linux",
        "win",
        "mac",
      ]
    }
  />
  <AlertClassicEditor />
  <ol
    className="list-styled big-spacer-top"
  >
    <li>
      <SentenceWithHighlights
        highlightKeys={
          Array [
            "pipeline",
          ]
        }
        highlightPrefixKeys="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare"
        translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp"
      />
    </li>
    <ul
      className="list-styled"
    >
      <li>
        <SentenceWithHighlights
          highlightKeys={
            Array [
              "task",
              "inline",
            ]
          }
          highlightPrefixKeys="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.nix"
          translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.script"
        />
        <CodeSnippet
          snippet="curl 'http://localhost/static/cpp/build-wrapper-macosx-x86.zip' --output build-wrapper.zip
unzip build-wrapper.zip"
        />
      </li>
    </ul>
    <li>
      <SentenceWithHighlights
        highlightKeys={
          Array [
            "task",
            "before",
          ]
        }
        highlightPrefixKeys="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare"
        translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.ccpp"
      />
    </li>
    <PrepareAnalysisCommand
      buildTool="cfamily"
      kind={1}
      projectKey="projectKey"
    />
    <li>
      <SentenceWithHighlights
        highlightKeys={
          Array [
            "task",
          ]
        }
        translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build.ccpp"
      />
    </li>
    <ul
      className="list-styled"
    >
      <li>
        <SentenceWithHighlights
          highlightKeys={
            Array [
              "build_wrapper",
            ]
          }
          translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_script.ccpp"
        />
        <CodeSnippet
          snippet="./build-wrapper-macos-x86/build-wrapper-macos-x86 --out-dir bw-output xcodebuild -project myproject.xcodeproj -configuration Release clean build"
        />
      </li>
    </ul>
    <li>
      <SentenceWithHighlights
        highlightKeys={
          Array [
            "task",
            "after",
          ]
        }
        highlightPrefixKeys="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run"
        translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run.ccpp"
      />
    </li>
    <Connect(withAppState(PublishSteps)) />
  </ol>
</Fragment>
`;

exports[`should render correctly for "win" 1`] = `
<Fragment>
  <span
    className="big-spacer-top display-block"
  >
    onboarding.tutorial.with.azure_pipelines.os
  </span>
  <RenderOptions
    checked="win"
    name="os"
    onCheck={[Function]}
    optionLabelKey="onboarding.build.other.os"
    options={
      Array [
        "linux",
        "win",
        "mac",
      ]
    }
  />
  <AlertClassicEditor />
  <ol
    className="list-styled big-spacer-top"
  >
    <li>
      <SentenceWithHighlights
        highlightKeys={
          Array [
            "pipeline",
          ]
        }
        highlightPrefixKeys="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare"
        translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp"
      />
    </li>
    <ul
      className="list-styled"
    >
      <li>
        <SentenceWithHighlights
          highlightKeys={
            Array [
              "task",
              "inline",
            ]
          }
          highlightPrefixKeys="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.win"
          translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.script"
        />
        <CodeSnippet
          snippet="Invoke-WebRequest -Uri 'http://localhost/static/cpp/build-wrapper-win-x86.zip' -OutFile 'build-wrapper.zip'
Expand-Archive -Path 'build-wrapper.zip' -DestinationPath '.'"
        />
      </li>
    </ul>
    <li>
      <SentenceWithHighlights
        highlightKeys={
          Array [
            "task",
            "before",
          ]
        }
        highlightPrefixKeys="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare"
        translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.ccpp"
      />
    </li>
    <PrepareAnalysisCommand
      buildTool="cfamily"
      kind={1}
      projectKey="projectKey"
    />
    <li>
      <SentenceWithHighlights
        highlightKeys={
          Array [
            "task",
          ]
        }
        translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build.ccpp"
      />
    </li>
    <ul
      className="list-styled"
    >
      <li>
        <SentenceWithHighlights
          highlightKeys={
            Array [
              "build_wrapper",
            ]
          }
          translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_script.ccpp"
        />
        <CodeSnippet
          snippet="build-wrapper-win-x86/build-wrapper-win-x86-64.exe --out-dir bw-output MSBuild.exe /t:Rebuild"
        />
      </li>
    </ul>
    <li>
      <SentenceWithHighlights
        highlightKeys={
          Array [
            "task",
            "after",
          ]
        }
        highlightPrefixKeys="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run"
        translationKey="onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run.ccpp"
      />
    </li>
    <Connect(withAppState(PublishSteps)) />
  </ol>
</Fragment>
`;
